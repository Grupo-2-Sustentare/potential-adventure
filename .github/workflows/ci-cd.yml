name: Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: main  # Garantir que estamos pegando a versão mais recente da branch main

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # Atualizando para a versão 18

    - name: Install dependencies
      run: npm install

    - name: Run ESLint (optional, only to check issues)
      run: npm run lint

    - name: Build the project
      run: |
        CI=false npm run build

    - name: Check build directory contents (debug step)
      run: |
        echo "Verificando conteúdo do diretório build..."
        ls -al build/
      
    - name: Deploy to EC2
      env:
        DEPLOY_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
      run: |
        # Configurar a chave privada
        echo "$DEPLOY_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem

        # Garantir que o diretório remoto existe na EC2
        echo "Garantindo diretório remoto na EC2..."
        ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@$EC2_PUBLIC_IP "mkdir -p /home/ubuntu/sustentare-dashboard/build"

        # Verificar conteúdo do diretório build (debug)
        echo "Verificando conteúdo do diretório build antes de copiar..."
        ls -al build/

        # Copiar os arquivos do build para a EC2
        echo "Copiando arquivos para EC2..."
        scp -v -i private_key.pem -o StrictHostKeyChecking=no -r build/* ubuntu@$EC2_PUBLIC_IP:/home/ubuntu/sustentare-dashboard/build/

        # Conectar via SSH e configurar o ambiente
        echo "Conectando à EC2 para configurar o ambiente..."
        ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@$EC2_PUBLIC_IP << 'EOF'
          set -e

          # Instalar dependências globais, se necessário
          if ! command -v pm2 &> /dev/null; then
            echo "Instalando PM2..."
            sudo npm install -g pm2
          fi

          # Navegar até o diretório do projeto
          cd /home/ubuntu/sustentare-dashboard

          # Verificar se há dependências locais
          if [ ! -d "node_modules" ]; then
            echo "Instalando dependências locais..."
            npm install
          fi

          # Garantir que o build seja atualizado
          npm run build

          # Reiniciar ou iniciar a aplicação com PM2
          pm2 start build/ --name sustentare-dashboard || pm2 restart sustentare-dashboard
        EOF
