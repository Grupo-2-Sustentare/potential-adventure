name: Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: main  # Garantir que estamos pegando a versão mais recente da branch main

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # Atualizando para a versão 18

    - name: Install dependencies
      run: npm install

    - name: Run ESLint (optional, only to check issues)
      run: npm run lint

    - name: Build the project
      run: |
        CI=false npm run build

    - name: Generate artifact with build files
      uses: actions/upload-artifact@v4
      with:
        name: build-frontend
        path: ./build  # Diretório gerado pelo npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-frontend
        path: ./build

    - name: Create .pem file from DEPLOY_KEY variable and set permissions
      id: create-pem-file
      run: |
        echo "${{ secrets.DEPLOY_PRIVATE_KEY }}" > $HOME/private_key.pem
        chmod 400 $HOME/private_key.pem

    - name: Check build directory contents (debug step)
      run: |
        echo "Verificando conteúdo do diretório build antes de copiar..."
        ls -al ./build

    - name: SCP files to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ubuntu
        key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        port: 22
        source: "./build/"
        target: "/home/ubuntu/sustentare-dashboard/build/"
        rm: true  # Forçar substituição dos arquivos

    - name: SSH to EC2 and adjust permissions
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ubuntu
        key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        port: 22
        script: |
          # Ajustar permissões no diretório
          chown -R ubuntu:ubuntu /home/ubuntu/sustentare-dashboard/build/
          chmod -R 770 /home/ubuntu/sustentare-dashboard/build/

          # Verificar o conteúdo do diretório build após o envio
          echo "Conteúdo do diretório build após o envio:"
          ls -al /home/ubuntu/sustentare-dashboard/build/

          # Instalar PM2, caso não esteja instalado
          if ! command -v pm2 &> /dev/null; then
            echo "Instalando PM2..."
            sudo npm install -g pm2
          fi

          # Navegar até o diretório do projeto
          cd /home/ubuntu/sustentare-dashboard

          # Verificar se há dependências locais
          if [ ! -d "node_modules" ]; then
            echo "Instalando dependências locais..."
            npm install
          fi

          # Garantir que o build seja atualizado
          npm run build

          # Iniciar a aplicação com PM2
          pm2 start build/ --name sustentare-dashboard || pm2 restart sustentare-dashboard
